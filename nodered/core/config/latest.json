[
    {
        "id": "8c45f8d06741be73",
        "type": "tab",
        "label": "Config Update",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "36d23b104ae95f19",
        "type": "tab",
        "label": "MUV Cloud",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "be312c8b96f1dcb0",
        "type": "mqtt-broker",
        "name": "MUV Cloud MQTT Broker",
        "broker": "mqtt.akenza.io",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "9cb41c778a242c32",
        "type": "http request",
        "z": "8c45f8d06741be73",
        "name": "Deploy Configuration",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "127.0.0.1/flows",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "Node-RED-Deployment-Type",
                "valueType": "other",
                "valueValue": "full"
            }
        ],
        "x": 1100,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "09c004e5e748d2f1",
        "type": "debug",
        "z": "8c45f8d06741be73",
        "name": "Deploying new System Config...",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1380,
        "y": 260,
        "wires": []
    },
    {
        "id": "4a3f544eb892783e",
        "type": "inject",
        "z": "8c45f8d06741be73",
        "name": "Startup",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 100,
        "y": 140,
        "wires": [
            [
                "5212e7eb218d9561",
                "94e875b81ba27c7c",
                "221faf33ddac3bab"
            ]
        ]
    },
    {
        "id": "8805e992f7f00598",
        "type": "switch",
        "z": "8c45f8d06741be73",
        "name": "Env Variable Exists",
        "property": "DEVICE_CONFIGURATION",
        "propertyType": "env",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 750,
        "y": 140,
        "wires": [
            [
                "38a38d75d43f92ec"
            ]
        ]
    },
    {
        "id": "38a38d75d43f92ec",
        "type": "http request",
        "z": "8c45f8d06741be73",
        "name": "Read Remote Configuration",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "${DEVICE_CONFIGURATION}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 780,
        "y": 180,
        "wires": [
            [
                "f167fd46d0e6685e"
            ]
        ]
    },
    {
        "id": "8362a82ef067f837",
        "type": "file",
        "z": "8c45f8d06741be73",
        "name": "Write Config",
        "filename": "/data/config/latest.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1070,
        "y": 220,
        "wires": [
            [
                "bcc7acb5c7e32a74"
            ]
        ]
    },
    {
        "id": "eecab5644c409048",
        "type": "file in",
        "z": "8c45f8d06741be73",
        "name": "Read Config",
        "filename": "/data/config/latest.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 430,
        "y": 180,
        "wires": [
            [
                "89e01d33fee4fecc"
            ]
        ]
    },
    {
        "id": "377977105c56c06a",
        "type": "change",
        "z": "8c45f8d06741be73",
        "name": "Store Remote Config",
        "rules": [
            {
                "t": "set",
                "p": "config.remote",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 260,
        "wires": [
            [
                "3199b7b26537303c"
            ]
        ]
    },
    {
        "id": "670b3f735eeae284",
        "type": "catch",
        "z": "8c45f8d06741be73",
        "name": "",
        "scope": [
            "eecab5644c409048"
        ],
        "uncaught": false,
        "x": 410,
        "y": 140,
        "wires": [
            [
                "8805e992f7f00598",
                "4f3b9deb99ebe9f4"
            ]
        ]
    },
    {
        "id": "c60ac3fc83d15a30",
        "type": "change",
        "z": "8c45f8d06741be73",
        "name": "Store Local Config",
        "rules": [
            {
                "t": "set",
                "p": "config.local",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 260,
        "wires": [
            [
                "8805e992f7f00598"
            ]
        ]
    },
    {
        "id": "5212e7eb218d9561",
        "type": "change",
        "z": "8c45f8d06741be73",
        "name": "Init Variables",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "config.local",
                "pt": "global",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "config.remote",
                "pt": "global",
                "to": " {}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 140,
        "wires": [
            [
                "eecab5644c409048"
            ]
        ]
    },
    {
        "id": "4f3b9deb99ebe9f4",
        "type": "debug",
        "z": "8c45f8d06741be73",
        "name": "System Config doesn't exist.",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 60,
        "wires": []
    },
    {
        "id": "7b7ac37718865a31",
        "type": "change",
        "z": "8c45f8d06741be73",
        "name": "Apply Remote Config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "config.remote",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 180,
        "wires": [
            [
                "8362a82ef067f837"
            ]
        ]
    },
    {
        "id": "fca1e38b2bfe1d61",
        "type": "switch",
        "z": "8c45f8d06741be73",
        "name": "True/False",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1070,
        "y": 140,
        "wires": [
            [
                "430ca381530b90ca"
            ],
            [
                "7b7ac37718865a31"
            ]
        ]
    },
    {
        "id": "bcc7acb5c7e32a74",
        "type": "change",
        "z": "8c45f8d06741be73",
        "name": "Apply Remote Config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "config.remote",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 260,
        "wires": [
            [
                "09c004e5e748d2f1",
                "48a85503faf9fed7"
            ]
        ]
    },
    {
        "id": "430ca381530b90ca",
        "type": "debug",
        "z": "8c45f8d06741be73",
        "name": "Remote System Config already deployed.",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 60,
        "wires": []
    },
    {
        "id": "89e01d33fee4fecc",
        "type": "json",
        "z": "8c45f8d06741be73",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 410,
        "y": 220,
        "wires": [
            [
                "c60ac3fc83d15a30"
            ]
        ]
    },
    {
        "id": "f167fd46d0e6685e",
        "type": "json",
        "z": "8c45f8d06741be73",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 710,
        "y": 220,
        "wires": [
            [
                "377977105c56c06a"
            ]
        ]
    },
    {
        "id": "3199b7b26537303c",
        "type": "function",
        "z": "8c45f8d06741be73",
        "name": "Compare Remote/Local Config",
        "func": "const deepCompare = (arg1, arg2) => {\n    if (Object.prototype.toString.call(arg1) === Object.prototype.toString.call(arg2)) {\n        if (Object.prototype.toString.call(arg1) === '[object Object]' || Object.prototype.toString.call(arg1) === '[object Array]') {\n            if (Object.keys(arg1).length !== Object.keys(arg2).length) {\n                return false;\n            }\n            return (Object.keys(arg1).every(function (key) {\n                return deepCompare(arg1[key], arg2[key]);\n            }));\n        }\n        return (arg1 === arg2);\n    }\n    return false;\n}\n\nif (deepCompare(global.get(\"config.remote\"), global.get(\"config.local\"))) {\n    msg.payload = true;\n} else {\n    msg.payload = false;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 300,
        "wires": [
            [
                "fca1e38b2bfe1d61"
            ]
        ]
    },
    {
        "id": "8be58ed0f40fbde5",
        "type": "comment",
        "z": "8c45f8d06741be73",
        "name": "Automatic Configuration Update",
        "info": "",
        "x": 150,
        "y": 20,
        "wires": []
    },
    {
        "id": "48a85503faf9fed7",
        "type": "delay",
        "z": "8c45f8d06741be73",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1060,
        "y": 300,
        "wires": [
            [
                "9cb41c778a242c32"
            ]
        ]
    },
    {
        "id": "c93deaf7f1d5dec2",
        "type": "debug",
        "z": "8c45f8d06741be73",
        "name": "Deploying new Customer Config...",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 620,
        "wires": []
    },
    {
        "id": "452a03c02524c388",
        "type": "switch",
        "z": "8c45f8d06741be73",
        "name": "Env Variable Exists",
        "property": "DEVICE_CUSTOMER_CONFIGURATION",
        "propertyType": "env",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 500,
        "wires": [
            [
                "ef927bf343698888"
            ]
        ]
    },
    {
        "id": "a24f0d4ac57a39be",
        "type": "file",
        "z": "8c45f8d06741be73",
        "name": "Write Config",
        "filename": "/data/cloud/latest.json",
        "filenameType": "str",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "utf8",
        "x": 1050,
        "y": 580,
        "wires": [
            [
                "c7484b48bc7597d8"
            ]
        ]
    },
    {
        "id": "d8b4ed7dd6a194db",
        "type": "file in",
        "z": "8c45f8d06741be73",
        "name": "Read Config",
        "filename": "/data/cloud/latest.json",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "utf8",
        "allProps": false,
        "x": 410,
        "y": 540,
        "wires": [
            [
                "9ce42f3560c49945"
            ]
        ]
    },
    {
        "id": "198aa74b751f7407",
        "type": "change",
        "z": "8c45f8d06741be73",
        "name": "Store Remote Config",
        "rules": [
            {
                "t": "set",
                "p": "cloud.config.remote",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 620,
        "wires": [
            [
                "a935e7abe2a75d34"
            ]
        ]
    },
    {
        "id": "0c38607f917fb2c9",
        "type": "catch",
        "z": "8c45f8d06741be73",
        "name": "",
        "scope": [
            "d8b4ed7dd6a194db"
        ],
        "uncaught": false,
        "x": 390,
        "y": 500,
        "wires": [
            [
                "452a03c02524c388",
                "807efadb7c4cc5cb"
            ]
        ]
    },
    {
        "id": "1d5fcd7ed11d239e",
        "type": "change",
        "z": "8c45f8d06741be73",
        "name": "Store Local Config",
        "rules": [
            {
                "t": "set",
                "p": "cloud.config.local",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 620,
        "wires": [
            [
                "452a03c02524c388"
            ]
        ]
    },
    {
        "id": "94e875b81ba27c7c",
        "type": "change",
        "z": "8c45f8d06741be73",
        "name": "Init Variables",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "cloud.config.local",
                "pt": "global",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "cloud.config.remote",
                "pt": "global",
                "to": " {}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "cloud.devices",
                "pt": "global",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 500,
        "wires": [
            [
                "d8b4ed7dd6a194db"
            ]
        ]
    },
    {
        "id": "807efadb7c4cc5cb",
        "type": "debug",
        "z": "8c45f8d06741be73",
        "name": "Customer Config doesn't exist.",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 420,
        "wires": []
    },
    {
        "id": "01aa9dc7544f2b55",
        "type": "change",
        "z": "8c45f8d06741be73",
        "name": "Apply Remote Config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cloud.config.remote",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 540,
        "wires": [
            [
                "a24f0d4ac57a39be"
            ]
        ]
    },
    {
        "id": "17cdbfbb1eedcc15",
        "type": "switch",
        "z": "8c45f8d06741be73",
        "name": "True/False",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1050,
        "y": 500,
        "wires": [
            [
                "8570e4975b604533",
                "d8f9f7a996818d8d"
            ],
            [
                "01aa9dc7544f2b55"
            ]
        ]
    },
    {
        "id": "c7484b48bc7597d8",
        "type": "change",
        "z": "8c45f8d06741be73",
        "name": "Apply Remote Config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "cloud.config.remote",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 620,
        "wires": [
            [
                "c93deaf7f1d5dec2",
                "a34f12b31113e0bf"
            ]
        ]
    },
    {
        "id": "8570e4975b604533",
        "type": "debug",
        "z": "8c45f8d06741be73",
        "name": "Remote Customer Config already deployed.",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 420,
        "wires": []
    },
    {
        "id": "9ce42f3560c49945",
        "type": "json",
        "z": "8c45f8d06741be73",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 390,
        "y": 580,
        "wires": [
            [
                "1d5fcd7ed11d239e"
            ]
        ]
    },
    {
        "id": "eb4728a6f0826f22",
        "type": "json",
        "z": "8c45f8d06741be73",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 690,
        "y": 580,
        "wires": [
            [
                "198aa74b751f7407"
            ]
        ]
    },
    {
        "id": "a935e7abe2a75d34",
        "type": "function",
        "z": "8c45f8d06741be73",
        "name": "Compare Remote/Local Config",
        "func": "const deepCompare = (arg1, arg2) => {\n    if (Object.prototype.toString.call(arg1) === Object.prototype.toString.call(arg2)) {\n        if (Object.prototype.toString.call(arg1) === '[object Object]' || Object.prototype.toString.call(arg1) === '[object Array]') {\n            if (Object.keys(arg1).length !== Object.keys(arg2).length) {\n                return false;\n            }\n            return (Object.keys(arg1).every(function (key) {\n                return deepCompare(arg1[key], arg2[key]);\n            }));\n        }\n        return (arg1 === arg2);\n    }\n    return false;\n}\n\nif (deepCompare(global.get(\"cloud.config.remote\"), global.get(\"cloud.config.local\"))) {\n    msg.payload = true;\n} else {\n    msg.payload = false;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 660,
        "wires": [
            [
                "17cdbfbb1eedcc15"
            ]
        ]
    },
    {
        "id": "a34f12b31113e0bf",
        "type": "change",
        "z": "8c45f8d06741be73",
        "name": "Set Cloud Devices",
        "rules": [
            {
                "t": "set",
                "p": "cloud.devices",
                "pt": "global",
                "to": "cloud.config.remote.devices",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 660,
        "wires": [
            [
                "470ee3b3dd48d7e9"
            ]
        ]
    },
    {
        "id": "470ee3b3dd48d7e9",
        "type": "debug",
        "z": "8c45f8d06741be73",
        "name": "Customer Config Applied",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 660,
        "wires": []
    },
    {
        "id": "d8f9f7a996818d8d",
        "type": "change",
        "z": "8c45f8d06741be73",
        "name": "Apply Local Config",
        "rules": [
            {
                "t": "set",
                "p": "cloud.devices",
                "pt": "global",
                "to": "cloud.config.local.devices",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 500,
        "wires": [
            [
                "e99891fadf209f72"
            ]
        ]
    },
    {
        "id": "161ad2f836a9b6a3",
        "type": "debug",
        "z": "8c45f8d06741be73",
        "name": "Customer Config Applied",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 500,
        "wires": []
    },
    {
        "id": "e99891fadf209f72",
        "type": "function",
        "z": "8c45f8d06741be73",
        "name": "function 1",
        "func": "global.get(\"cloud.devices\").forEach(device => {\n    device.sensors = {};\n    device.errors = {};\n})\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 500,
        "wires": [
            [
                "161ad2f836a9b6a3"
            ]
        ]
    },
    {
        "id": "ce58468417dcb813",
        "type": "function",
        "z": "8c45f8d06741be73",
        "name": "Read Config URLs",
        "func": "global.get(\"cloud.devices\").forEach(device => {\n    if (device.configURL !== null && device.configURL !== undefined) {\n        msg.url = device.configURL;\n        node.send(msg);\n    }\n});\n\nnode.done();",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 820,
        "wires": [
            [
                "c17d4993caeb087f"
            ]
        ]
    },
    {
        "id": "c17d4993caeb087f",
        "type": "http request",
        "z": "8c45f8d06741be73",
        "name": "Read Remote Configuration",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 660,
        "y": 820,
        "wires": [
            [
                "6cc338bb8f3e85b9"
            ]
        ]
    },
    {
        "id": "221faf33ddac3bab",
        "type": "delay",
        "z": "8c45f8d06741be73",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 240,
        "y": 820,
        "wires": [
            [
                "ce58468417dcb813"
            ]
        ]
    },
    {
        "id": "6cc338bb8f3e85b9",
        "type": "json",
        "z": "8c45f8d06741be73",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 590,
        "y": 860,
        "wires": [
            [
                "8beb1874c301552f",
                "1a9f5fe822e2d685"
            ]
        ]
    },
    {
        "id": "8beb1874c301552f",
        "type": "debug",
        "z": "8c45f8d06741be73",
        "name": "Deploying new Device Config...",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 860,
        "wires": []
    },
    {
        "id": "1a9f5fe822e2d685",
        "type": "delay",
        "z": "8c45f8d06741be73",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 600,
        "y": 900,
        "wires": [
            [
                "24fc4c4655c3184e"
            ]
        ]
    },
    {
        "id": "42e544d829e692a9",
        "type": "http request",
        "z": "8c45f8d06741be73",
        "name": "Deploy Configuration",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "127.0.0.1/flow",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 640,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "24fc4c4655c3184e",
        "type": "change",
        "z": "8c45f8d06741be73",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "url",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 940,
        "wires": [
            [
                "42e544d829e692a9"
            ]
        ]
    },
    {
        "id": "ef927bf343698888",
        "type": "change",
        "z": "8c45f8d06741be73",
        "name": "Set Config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "DEVICE_CUSTOMER_CONFIGURATION",
                "tot": "env"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 540,
        "wires": [
            [
                "eb4728a6f0826f22"
            ]
        ]
    },
    {
        "id": "4880e07a7863e3c9",
        "type": "mqtt out",
        "z": "36d23b104ae95f19",
        "name": "MUV Cloud Telemtry",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "be312c8b96f1dcb0",
        "x": 1240,
        "y": 80,
        "wires": []
    },
    {
        "id": "54630f3e2ab7393b",
        "type": "function",
        "z": "36d23b104ae95f19",
        "name": "Send Sensors to Cloud",
        "func": "global.get(\"cloud.devices\").forEach(device => {\n    msg.topic = device.topic + \"/error\";\n    msg.payload = device.sensors;\n    node.send(msg);\n});\n\nnode.done();",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 80,
        "wires": [
            [
                "4880e07a7863e3c9"
            ]
        ]
    },
    {
        "id": "5399216ed31f9d82",
        "type": "inject",
        "z": "36d23b104ae95f19",
        "name": "Cloud Cycle",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "54630f3e2ab7393b",
                "de3e23cc3af03da9",
                "ddb12aeb38995a4a"
            ]
        ]
    },
    {
        "id": "de3e23cc3af03da9",
        "type": "link out",
        "z": "36d23b104ae95f19",
        "name": "Cloud uplink cycle",
        "mode": "link",
        "links": [
            "acf296b73e514c81",
            "5b23648546b1c667"
        ],
        "x": 265,
        "y": 40,
        "wires": []
    },
    {
        "id": "238392b309c51de9",
        "type": "mqtt out",
        "z": "36d23b104ae95f19",
        "name": "MUV Cloud Error",
        "topic": "",
        "qos": "0",
        "retain": "false",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "be312c8b96f1dcb0",
        "x": 1230,
        "y": 140,
        "wires": []
    },
    {
        "id": "ddb12aeb38995a4a",
        "type": "function",
        "z": "36d23b104ae95f19",
        "name": "Send errors to cloud",
        "func": "global.get(\"cloud.devices\").forEach(device => {\n    msg.topic = device.topic + \"/error\";\n    msg.payload = device.errors;\n    node.send(msg);\n});\n\nnode.done();",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 140,
        "wires": [
            [
                "238392b309c51de9"
            ]
        ]
    },
    {
        "id": "a195b8e2c4504d83",
        "type": "inject",
        "z": "36d23b104ae95f19",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1800",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 870,
        "y": 20,
        "wires": [
            [
                "371668732aec16e9"
            ]
        ]
    },
    {
        "id": "371668732aec16e9",
        "type": "change",
        "z": "36d23b104ae95f19",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "action",
                "pt": "msg",
                "to": "connect",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "broker",
                "pt": "msg",
                "to": "{\t   \"broker\": \"mqtt.akenza.io\",\t   \"port\": 1883,\t   \"force\": true,\t   \"username\": $env(\"CLOUD_USERNAME\"),\t   \"password\": $env(\"CLOUD_PASSWORD\")\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 20,
        "wires": [
            [
                "4880e07a7863e3c9",
                "238392b309c51de9"
            ]
        ]
    }
]